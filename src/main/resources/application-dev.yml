spring:
  mail:
    host: smtp.aliyun.com
    username: yuzhanwei@aliyun.com
    password: mcar212325
    default-encoding: utf-8
    port: 465
    protocol: smtp
    test-connection: false
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  datasource:
    # 主库--注意，这里的为【jdbcurl】-- 默认使用HikariPool作为数据库连接池
    master:
      jdbcurl: jdbc:mysql://127.0.0.1:3306/school?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      username: root
      password:
      driver-class-name: com.mysql.jdbc.Driver
    # 从库--注意，这里为 【url】-- 使用 druid 作为数据库连接池
    slave:
      url: jdbc:mysql://127.0.0.1:3306/school?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      username: root
      password:
      driver-class-name: com.mysql.jdbc.Driver
    read: get,select,count,list,query,find
    write: add,create,update,delete,remove,insert
    # druid相关配置
    druid:
      # 监控统计拦截的filters
      filters: stat,wall
      # 配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      # 获取连接等待超时时间
      max-wait: 6000
      # 间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      # 一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      web-stat-filter:
        enabled: true
        exclusions: js,gif,jpg,png,css,ico,/druid/*
      stat-view-servlet:
        enabled: true
        login-username: druid
        login-password: druid@2019

logging:
  path: /var/tmp
  level:
    com:
      julibo:
        pig:
          cms:
            dao: debug

ryan:
  web:
    logging:
      kafka:
        enabled: false
        # 多个broker用英文逗号分隔
        broker: 127.0.0.1:9092
        # 创建Kafka的topic时使用
        env: test